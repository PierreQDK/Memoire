---
title: "Memoire"
format: html
editor: visual
---
# Chargement des librairies nécessaires pour l'analyse
```{r setup, include=FALSE}
# Chargement des librairies (comme dans ton script)
library(tibble)
library(plm)
library(lmtest)
library(ggplot2)
library(haven)
library("writexl")
library(readxl)
library(zoo)
library(lubridate)
library(clubSandwich)
library(DIDmultiplegt)
library(synthdid)
library(ggallin)
library(ggthemes)
library(ggridges)
library(GGally)
library(ggeffects)
library(effects)
library(gtsummary)
library(stats)
library(ggcorrplot)
library(ggTimeSeries)
library(car)
library(plotly)
library(tidyr)
library(tidyverse)
library(conflicted)
library(elo)
library(forecast)
library(nortsTest)
library(strucchange)
library(bsts)
library(Hmisc)
library(stargazer)
library(performance)
library(Kendall)
library(naniar)
library(scales)
library(mgcv)
library(e1071)
library(dplyr)
library(roll)
library(EnvCpt)
library(viridis)
library(ineq)
library(gglorenz)
library(gridExtra)
library(changepoint)
```

# Fonction utilitaire pour transformer année/mois/jour en objet Date
```{r date-fn}
toDate <- function(year, month, day) {
  ISOdate(year, month, day)
}
```



# Import et nettoyage de la feuille 'panel7' (calcul des variables traitement, post, interaction)
```{r import-clean}
a1 <- read_excel("daily_futures_prices_1920s.xlsx", sheet = "panel7")
a1$Date <- as.Date(toDate(a1$Year, a1$Month, a1$Day))
a1$Treatment <- ifelse(grepl("CHI", a1$Indiv), 1, 0)
a1$Post <- ifelse(a1$Date >= as.Date("1926-02-01"), 1, 0)
a1$Treat_Post <- a1$Treatment * a1$Post
a1 <- pdata.frame(a1, index = c("Indiv", "Date"))
a1$Date <- as.Date(as.character(a1$Date))  # Correction type date
pdim(a1)
```


# GRAPHIQUE DE CHAQUE MATIÈRE PREMIÈRE ET VOLATILITÉS

## MAY
### Filtrage des contrats échéance MAY (blé et maïs)
```{r filter-mai}
contracts_mai <- a1[grepl("MAY", a1$Indiv), ]
contracts_mai_wheat <- contracts_mai[grepl("WHEAT", contracts_mai$Indiv), ]
contracts_mai_corn <- contracts_mai[grepl("CORN", contracts_mai$Indiv), ]
```

### Visualisation des prix de clôture - échéance MAY - WHEAT
```{r graph-mai-wheat}
ggplot(subset(contracts_mai_wheat, !is.na(Close)), aes(x = Date, y = Close, color = Indiv)) +
  geom_line(linewidth = 1) +
  labs(title = "Prix à terme du blé - Contrats échéance MAY (tous marchés)",
       x = "Date", y = "Prix de clôture") +
  geom_vline(xintercept = as.Date("1926-02-01"), linetype = "dashed") +
  scale_x_date(date_breaks = "1 week", date_labels = "%b %d") +
  theme_minimal()
```

### Visualisation des prix de clôture - échéance MAY - CORN
```{r graph-mai-corn}
ggplot(subset(contracts_mai_corn, !is.na(Close)), aes(x = Date, y = Close, color = Indiv)) +
  geom_line(linewidth = 1) +
  labs(title = "Prix à terme du maïs - Contrats échéance MAY (tous marchés)",
       x = "Date", y = "Prix de clôture") +
  geom_vline(xintercept = as.Date("1926-02-01"), linetype = "dashed") +
  scale_x_date(date_breaks = "1 week", date_labels = "%b %d") +
  theme_minimal()
```

### Visualisation graphique de l'effet DiD estimé - échéance MAY
```{r graph-did-mai}
a1_did_sample_mai <- rbind(
  a1[grepl("CHI-WHEAT-MAY", a1$Indiv), ],
  a1[grepl("KC_WHEAT_MAY|STL-WHEAT-MAY", a1$Indiv), ]
)
a1_did_sample_mai <- a1_did_sample_mai %>%
  mutate(Groupe = ifelse(grepl("CHI", Indiv), "Treated", "Control"),
         Période = factor(ifelse(as.Date(Date) >= as.Date("1926-02-01"), "Après", "Avant"), levels = c("Avant", "Après")))

mean_did_mai <- a1_did_sample_mai %>%
  group_by(Groupe, Période) %>%
  summarise(Prix_moyen = mean(Close, na.rm = TRUE), .groups = "drop")

ggplot(mean_did_mai, aes(x = Période, y = Prix_moyen, group = Groupe, color = Groupe)) +
  geom_line(linewidth = 1.5) +
  geom_point(size = 3) +
  labs(title = "Effet estimé de la novation (DiD) - Contrats MAY",
       x = "Période", y = "Prix moyen") +
  theme_minimal()
```

### Calcul de la volatilité simple par contrat - MAY
```{r volatility-mai}
vol_ma <- contracts_mai %>%
  group_by(Indiv) %>%
  summarise(volatilite = sd(Close, na.rm = TRUE))
print(vol_ma)
```

## JULY
### Filtrage des contrats échéance JULY (blé et maïs)
```{r filter-july}
contracts_july <- a1[grepl("JULY", a1$Indiv), ]
contracts_july_wheat <- contracts_july[grepl("WHEAT", contracts_july$Indiv), ]
contracts_july_corn <- contracts_july[grepl("CORN", contracts_july$Indiv), ]
```

### Visualisation des prix de clôture - échéance JULY - WHEAT
```{r graph-july-wheat}
ggplot(subset(contracts_july_wheat, !is.na(Close)), aes(x = Date, y = Close, color = Indiv)) +
  geom_line(linewidth = 1) +
  labs(title = "Prix à terme du blé - Contrats échéance JULY (tous marchés)",
       x = "Date", y = "Prix de clôture") +
  geom_vline(xintercept = as.Date("1926-02-01"), linetype = "dashed") +
  scale_x_date(date_breaks = "1 week", date_labels = "%b %d") +
  theme_minimal()
```

### Visualisation des prix de clôture - échéance JULY - CORN
```{r graph-july-corn}
ggplot(subset(contracts_july_corn, !is.na(Close)), aes(x = Date, y = Close, color = Indiv)) +
  geom_line(linewidth = 1) +
  labs(title = "Prix à terme du maïs - Contrats échéance JULY (tous marchés)",
       x = "Date", y = "Prix de clôture") +
  geom_vline(xintercept = as.Date("1926-02-01"), linetype = "dashed") +
  scale_x_date(date_breaks = "1 week", date_labels = "%b %d") +
  theme_minimal()
```

### Visualisation graphique de l'effet DiD estimé - échéance JULY
```{r graph-did-july}
a1_did_sample_july <- rbind(
  a1[grepl("CHI-WHEAT-JULY", a1$Indiv), ],
  a1[grepl("KC_WHEAT_JULY|STL-WHEAT-JULY", a1$Indiv), ]
)
a1_did_sample_july <- a1_did_sample_july %>%
  mutate(Groupe = ifelse(grepl("CHI", Indiv), "Treated", "Control"),
         Période = factor(ifelse(as.Date(Date) >= as.Date("1926-02-01"), "Après", "Avant"), levels = c("Avant", "Après")))

mean_did_july <- a1_did_sample_july %>%
  group_by(Groupe, Période) %>%
  summarise(Prix_moyen = mean(Close, na.rm = TRUE), .groups = "drop")

ggplot(mean_did_july, aes(x = Période, y = Prix_moyen, group = Groupe, color = Groupe)) +
  geom_line(linewidth = 1.5) +
  geom_point(size = 3) +
  labs(title = "Effet estimé de la novation (DiD) - Contrats JULY",
       x = "Période", y = "Prix moyen") +
  theme_minimal()
```

### Calcul de la volatilité simple par contrat - JULY
```{r volatility-july}
vol_july <- contracts_july %>%
  group_by(Indiv) %>%
  summarise(volatilite = sd(Close, na.rm = TRUE))
print(vol_july)
```

## SEPTEMBER
### Filtrage des contrats échéance SEPTEMBER (blé et maïs)
```{r filter-september}
contracts_sep <- a1[grepl("SEPTEMBER", a1$Indiv), ]
contracts_sep_wheat <- contracts_sep[grepl("WHEAT", contracts_sep$Indiv), ]
contracts_sep_corn <- contracts_sep[grepl("CORN", contracts_sep$Indiv), ]
```

### Visualisation des prix de clôture - échéance SEPTEMBER - WHEAT
```{r graph-sep-wheat}
ggplot(subset(contracts_sep_wheat, !is.na(Close)), aes(x = Date, y = Close, color = Indiv)) +
  geom_line(linewidth = 1) +
  labs(title = "Prix à terme du blé - Contrats échéance SEPTEMBER (tous marchés)",
       x = "Date", y = "Prix de clôture") +
  geom_vline(xintercept = as.Date("1926-02-01"), linetype = "dashed") +
  scale_x_date(date_breaks = "1 week", date_labels = "%b %d") +
  theme_minimal()
```

### Visualisation des prix de clôture - échéance SEPTEMBER - CORN
```{r graph-sep-corn}
ggplot(subset(contracts_sep_corn, !is.na(Close)), aes(x = Date, y = Close, color = Indiv)) +
  geom_line(linewidth = 1) +
  labs(title = "Prix à terme du maïs - Contrats échéance SEPTEMBER (tous marchés)",
       x = "Date", y = "Prix de clôture") +
  geom_vline(xintercept = as.Date("1926-02-01"), linetype = "dashed") +
  scale_x_date(date_breaks = "1 week", date_labels = "%b %d") +
  theme_minimal()
```

### Calcul de la volatilité simple par contrat - SEPTEMBER
```{r volatility-september}
vol_sep <- contracts_sep %>%
  group_by(Indiv) %>%
  summarise(volatilite = sd(Close, na.rm = TRUE))
print(vol_sep)
```


---------
# DID
```{r}
# Chargement des packages
library(plm)
library(dplyr)
library(tibble)
library(lmtest)
library(sandwich)
# Fonction pour exécuter un modèle DiD TWFE avec erreurs standards Driscoll-Kraay
run_did <- function(data, contract_name) {
  data$Date <- as.Date(as.character(data$Date))

  # Créer les variables AVANT de passer en pdata.frame
  treat <- ifelse(grepl("CHI", data$Indiv), 1, 0)
  post <- ifelse(data$Date >= as.Date("1926-02-01"), 1, 0)
  data$Treat_Post <- treat * post

  # Panelisation
  data <- pdata.frame(data, index = c("Indiv", "Date"))

  # Régression TWFE
  model <- tryCatch({
    plm(Close ~ Treat_Post, data = data, effect = "twoways", model = "within", na.action = na.omit)
  }, error = function(e) NULL)

  if (is.null(model)) {
    return(tibble(
      Contrat = contract_name,
      Coef = NA,
      SE = NA,
      Stars = NA,
      N = NA,
      T = NA,
      NT = NA
    ))
  }

  est <- coef(model)["Treat_Post"]
  se <- coeftest(model, vcovSCC(model, type = "HC0"))["Treat_Post", "Std. Error"]
  tval <- est / se
  pval <- 2 * pt(abs(tval), df = model$df.residual, lower.tail = FALSE)
  stars <- ifelse(pval < 0.001, "***", ifelse(pval < 0.01, "**", ifelse(pval < 0.05, "*", "")))

  N <- length(unique(data$Indiv))
  T <- length(unique(data$Date))
  NT <- nobs(model)

  return(tibble(
    Contrat = contract_name,
    Coef = round(est, 3),
    SE = paste0(format(round(se, 3), nsmall = 3), stars),
    N = N,
    T = T,
    NT = NT
  ))
}
results_did
```



